language: c

compiler: gcc

sudo: require

service:
  - docker

git:
  depth: false
  quiet: true

notifications:
  email:
    recipients:
    - florent.poinsard@epitech.eu
    on_success: never
    on_failure: always
  slack:
    rooms:
      - epitech-tls-22:OsWtUSdnX45sPtL2EbBPO8aA
    template:
      - "Build %{repository_slug}@%{branch} -> %{result} in %{duration}"

jobs:
    include :
        - stage: build
          name: "Build"
          install:
            - docker pull epitechcontent/epitest-docker
          before_script:
            - chmod +x ./ci/script/build.sh
          script:
            - docker run -v $PWD:/app epitechcontent/epitest-docker bash -c "cd app && ./ci/script/build.sh"

        - stage: tests
          name: "Unit Tests"
          install:
            - docker pull epitechcontent/epitest-docker
          before_script:
            - chmod +x ./ci/script/unit_test.sh
          script:
            - docker run -v $PWD:/app epitechcontent/epitest-docker bash -c "cd app && ./ci/script/unit_test.sh"
          after_script:
            - bash <(curl -s https://codecov.io/bash)
        -
          name: "Functional Tests"
          install:
            - docker pull epitechcontent/epitest-docker
          before_script:
            - chmod +x ./ci/script/functional_test.sh
          script:
            - docker run -v $PWD:/app epitechcontent/epitest-docker bash -c "cd app && ./ci/script/functional_test.sh"

        - stage: deploy
          name: "Deployement Epitech Server"
          if: branch IN (master, hotfix/travis) AND type != cron AND type != pull_request
          before_deploy:
            - chmod +x ./ci/script/deploy_epitech.sh
          deploy:
            provider: script
            script: bash ci/script/deploy_epitech.sh
            on:
              branch: master
        -
          name: "Deployement Documentation"
          if: branch IN (master, hotfix/travis, docs) AND type != cron AND type != pull_request
          before_script:
            - chmod +x ./ci/script/deploy_documentation.sh
          script:
            - ./ci/script/deploy_documentation.sh
          deploy:
            provider: pages
            skip_cleanup: true
            github_token: $GITHUB_TOKEN
            keep_history: true
            on:
              branch: master

        - stage: deploy-test
          name: "Deployement Epitech Server pre-prod"
          if: branch IN (dev) AND type != cron AND type != pull_request
          before_deploy:
            - chmod +x ./ci/script/deploy_epitech_pre_prod.sh
          deploy:
            provider: script
            script: bash ci/script/deploy_epitech_pre_prod.sh
            on:
              branch: dev